{"name":"Evojs","tagline":"Evolutionary Algorithms with ANN","body":"evoJS\r\n=========\r\nevoJS is a genetic and evolutionary algorithm tool, making it easy to incorporate evolutionary algorithms in your JavaScript.  \r\n\r\nInstallation\r\n-------------\r\nTo install run `npm install evo-js`.\r\n\r\nTo run on a browser, include `evo.min.js` in your scripts. \r\n\r\nBasic Usage\r\n---------\r\nThe tool is used through a `pool` object. Here is a simple example\r\n\r\n```javascript\r\n    // Instantiate a pool object\r\n    var pool = evo.pool();\r\n\r\n    // Define a method to evaluate genes and return the fitness\r\n    // Genes comes as a long list of floats\r\n    pool.on('run', function(genes){\r\n        return evaluateGenes(genes); // Supply this method to evaluate the genes\r\n    });\r\n\r\n    // Run with a stopping criteria\r\n    pool.run({generations: 10});\r\n\r\n    // Get the best genes\r\n    var result = pool.bestGenes();\r\n```\r\n\r\nPool Configuration\r\n----------\r\nAs an argument to `evo.pool` a configuration object can be passed to override the\r\ndefaults. Here are the defaults.\r\n```javascript\r\n    var config = {\r\n        genes: 200, // Number of genes for each member\r\n        size: 100, //  Number of members in the gene pool\r\n        cross_rate: 0.05, // The frequency of gene \"twists\" in two parents genes\r\n        mutate_rate: 0.05, // The frequency of mutations in a parent gene\r\n        mutate_amount: 1.0, // The amount a mutated gene can deviate\r\n\r\n        // Each generation is made from a mix of different breeding strategies\r\n        // Ratios defines the ratio of each in the next generation\r\n        ratios: {\r\n            top:    0.25,    // Survivors last generation\r\n            mutate: 0.25,    // Created by randomly altering genes\r\n            cross:  0.25,    // Created from crossing parents\r\n            random: 0.10,    // Random survivors\r\n            average:0.05,    // Parents genes are averaged together\r\n            fresh:  0.10    // Random gene sets\r\n        }\r\n    });\r\n\r\n    var pool = evo.pool(config);\r\n```\r\n\r\nStopping conditions\r\n----------\r\nAs an argument to `pool.run` a configuration object can be passed to defined the\r\nstopping conditions\r\n```javascript\r\n    var config = {\r\n        iterations: 1000, // How many genes will be run\r\n        generations: 100, // How many generations will be run\r\n        score: 10.0,      // Minimum score to be reached (higher score is better)\r\n        // A while function can be supplied\r\n        // when false is returned sim stops\r\n        while: function(){\r\n            return true;\r\n        }\r\n\r\n        // If true, a method will be attempted to stop when the score\r\n        // stops changing across generations\r\n        auto_run: false\r\n    });\r\n\r\n    pool.run(config);\r\n```\r\n\r\n'Manual' simulations\r\n----------\r\nWhile pool provides the run method to run simulations, the gene pool can be accessed\r\nmanually for custom simulations.\r\n```javascript\r\n    pool = evo.pool()\r\n\r\n    while(pool.generation < 100) {\r\n        // Grab next genes\r\n        var genes = pool.nextGenes();\r\n\r\n        //Evaluate genes\r\n        var score = evaluateGenes(genes);\r\n\r\n        //Report genes back to pool\r\n        pool.report(genes, score);\r\n    }\r\n```\r\nWhen the gene pool is empty, a new generation will be created.\r\n\r\nMember construction\r\n----------\r\nYou may provide a member constructor to automate gene evaluation, and use a more\r\nobject oriented approach\r\n```javascript\r\n    pool = evo.pool()\r\n\r\n    // Supply a 'constructor' to use the genes\r\n    pool.on('member', function(genes){\r\n        var member = {\r\n            height: genes[0],\r\n            width: genes[1]\r\n        };\r\n        return member;\r\n    });\r\n\r\n    // Run will now give your constructed member instead of a gene list\r\n    pool.on('run', function(member){\r\n        return member.height + member.width;\r\n    });\r\n```\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}