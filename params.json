{"name":"Evojs","tagline":"Evolutionary Algorithms with ANN","body":"  evoJS\r\n=========\r\n\r\nevoJS is a genetic algorithm 'calculator', making it easy to incoporate evolutionary algorithms in your code.  \r\nWrapped in the library are simple ANN (Artificial Neural Network) and CPPN (Compositional Pattern Producing Network) \r\nclasses that work easily with the genetic algorithm. \r\n\r\nInstallation\r\n-------------\r\nevoJS is compatible with both require.js and node.\r\n\r\n\r\nUsage\r\n---------\r\nGetting started is easy:\r\n\r\n```javascript\r\n    // Instantiate a pool object\r\n    var pool = evo.pool();\r\n\r\n    // Get the next set of genes\r\n    var genes = pool.next();  \r\n\r\n    // Create a feed forward network\r\n    var net = evo.network('feedforward', genes) \r\n\r\n    // Evaluate the network\r\n    var output = net.calc([0,1,2]);\r\n    \r\n    // Assign a score to the output\r\n    net.score = output[0] - output[1];\r\n    \r\n    // Report back to the pool\r\n    pool.report(net);\r\n```\r\n\r\nGradually, the gene pool will evolve to maxmize the score.\r\nThe magic happens in `pool.next` and `pool.report`. `pool.next()` will retrieve the next set of genes,\r\nand when the pool is empty, it will breed all of the specimens you have reported back to the pool via `pool.report`.\r\n\r\n###### Triggers\r\n----------\r\nWe can monitor for when a generation is computed with the 'breed' trigger.\r\n\r\n```javascript\r\n    pool.on('breed', function(){\r\n        console.log(this.generation); // Prints the number of generations computed\r\n    });\r\n```\r\n\r\n###### Spawn Objects\r\nFor easy creation of objects using the genes, we can use the 'spawn' trigger. This lets you define a function to shortcut the creation of your genetic object.\r\n\r\n```javascript\r\n    pool.on('spawn', function(genes){\r\n        var net = evo.network('cppn', genes);\r\n        return net;\r\n    });\r\n```\r\n\r\nThe return value of this function will be returned when `pool.spawn` is called.\r\nNow, we can do this: \r\n\r\n```javascript\r\n    var net = pool.spawn();\r\n    \r\n    // Evaluate the network\r\n    var output = net.calc([0,1,2]);\r\n    \r\n    // Assign a score to the output\r\n    net.score = output[0] - output[1];\r\n    \r\n    // pool reference is now stored in net. \r\n    net.report();\r\n```\r\n   \r\nMore to Come\r\n----------\r\nevoJS is a just baby!\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}